{"version":3,"file":"main.js","mappings":"mBACO,SAASA,EAAWC,EAAcC,EAAOC,EAAOC,EAAYC,EAAkBC,GACjF,IAAMC,EAAcN,EAAaO,cAAc,SAASC,WAAU,GAC5DC,EAAYH,EAAYC,cAAc,gBACtCG,EAAaJ,EAAYC,cAAc,sBAgB7C,OAbAE,EAAUE,IAAMV,EAChBQ,EAAUG,IAAMV,EAChBI,EAAYC,cAAc,gBAAgBM,YAAcX,EAGxDQ,EAAWI,iBAAiB,QAASV,GAGrCE,EAAYC,cAAc,wBAAwBO,iBAAiB,SAAS,kBAAMX,EAAWG,EAAY,IAGzGG,EAAUK,iBAAiB,SAAS,kBAAMT,EAAgBJ,EAAOC,EAAM,IAEhEI,CACX,CAGO,SAASF,EAAiBW,GAC7BA,EAAIC,OAAOC,UAAUC,OAAO,8BAChC,CAGO,SAASf,EAAWgB,GACvBA,EAAKC,QACT,CC9BO,SAASC,EAAUC,GAEtBA,EAAML,UAAUM,IAAI,mBAGpBC,SAASV,iBAAiB,UAAWW,EACzC,CAGO,SAASC,EAAWC,GACvBA,EAAMV,UAAUG,OAAO,mBAEvBI,SAASI,oBAAoB,UAAWH,EAC5C,CAGA,SAASA,EAAeV,GACpB,GAAgB,WAAZA,EAAIc,IAAkB,CACtB,IAAMC,EAAcN,SAASjB,cAAc,oBACvCuB,GACAJ,EAAWI,EAEnB,CACJ,CCnBA,IAAM9B,EAAewB,SAASjB,cAAc,kBAAkBwB,QACxDC,EAAoBR,SAASjB,cAAc,iBAG3C0B,EAAaT,SAASjB,cAAc,yBACpC2B,EAAYV,SAASjB,cAAc,wBAGnC4B,EAAYX,SAASjB,cAAc,oBACnC6B,EAAWZ,SAASjB,cAAc,wBAClC8B,EAAab,SAASjB,cAAc,qBAGpC+B,EAASd,SAASe,iBAAiB,UAGnCC,EAAkBL,EAAU5B,cAAc,gBAC1CkC,EAAYD,EAAgBjC,cAAc,2BAC1CmC,EAAmBF,EAAgBjC,cAAc,kCAGjDoC,EAAOnB,SAASjB,cAAc,mBAC9BqC,EAAMpB,SAASjB,cAAc,yBAG7BsC,EAAcT,EAAS7B,cAAc,gBACrCuC,EAAiBD,EAAYtC,cAAc,gCAC3CwC,EAAiBF,EAAYtC,cAAc,0BAIjD,SAASyC,EAAe/C,EAAOC,GAC3B,IAAM+C,EAAaZ,EAAW9B,cAAc,iBAC5C0C,EAAWtC,IAAMV,EACjBgD,EAAWrC,IAAMV,EACjBmC,EAAW9B,cAAc,mBAAmBM,YAAcX,EAC1DmB,EAAUgB,EACd,CAuCAb,SAASe,iBAAiB,UAAUW,SAAQ,SAACvB,GAAWA,EAAMV,UAAUM,IAAI,oBAAqB,ICjFrE,CACxB,CACEoB,KAAM,QACNQ,KAAM,iFAER,CACER,KAAM,sBACNQ,KAAM,6FAER,CACER,KAAM,UACNQ,KAAM,kFAER,CACER,KAAM,WACNQ,KAAM,oFAER,CACER,KAAM,qBACNQ,KAAM,6FAER,CACER,KAAM,SACNQ,KAAM,kFD6DCD,SAAQ,SAAAE,GACjBpB,EAAkBqB,OACdtD,EACIC,EACAoD,EAAKD,KACLC,EAAKT,KACLxC,EACAC,GACA,SAACH,EAAOC,GAAK,OAAK8C,EAAe/C,EAAOC,EAAM,IAG1D,IAGAoC,EAAOY,SAAQ,SAACvB,GAEQA,EAAMpB,cAAc,iBAC5BO,iBAAiB,SAAS,WAClCY,EAAWC,GAGPA,EAAMV,UAAUqC,SAAS,wBACzBT,EAAYU,OAEpB,IAGA5B,EAAMb,iBAAiB,aAAa,SAACC,IDrFlC,SAA4BA,GAC1BA,EAAIC,OAAOwC,QAAQ,oBACpB9B,EAAWX,EAAI0C,cAEvB,CCkFQC,CAAmB3C,GAGfY,EAAMV,UAAUqC,SAAS,yBAA2B3B,EAAMV,UAAUqC,SAAS,oBAC7ET,EAAYU,OAEpB,GACJ,IAGAtB,EAAWnB,iBAAiB,SAAS,WACjC2B,EAAUkB,MAAQhB,EAAK9B,YACvB6B,EAAiBiB,MAAQf,EAAI/B,YAC7BQ,EAAUc,EACd,IAGAD,EAAUpB,iBAAiB,SAAS,WAChCO,EAAUe,EACd,IAGAI,EAAgB1B,iBAAiB,UAAU,SAACC,GAAG,OAzF/C,SAAwBA,GACpBA,EAAI6C,iBAGJjB,EAAK9B,YAAc4B,EAAUkB,MAC7Bf,EAAI/B,YAAc6B,EAAiBiB,MAGnCjC,EAAWS,EACf,CAgFoD0B,CAAe9C,EAAI,IAGvE8B,EAAY/B,iBAAiB,UAAU,SAACC,GAAG,OAhF3C,SAA2BA,GACvBA,EAAI6C,iBAGJ,IAAME,EAAU/D,EACZC,EACA+C,EAAeY,MACfb,EAAea,MACfxD,EACAC,GACA,SAACH,EAAOC,GAAK,OAAK8C,EAAe/C,EAAOC,EAAM,IAIlD8B,EAAkB+B,QAAQD,GAG1BpC,EAAWU,GAGXrB,EAAIC,OAAOuC,OACf,CA2DgDS,CAAkBjD,EAAI,G","sources":["webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/scripts/cards.js"],"sourcesContent":["// Функция создания карточки\r\nexport function createCard(cardTemplate, image, title, deleteCard, handleLikeButton, handleCardClick) {\r\n    const cardElement = cardTemplate.querySelector('.card').cloneNode(true); // карточка\r\n    const cardImage = cardElement.querySelector('.card__image'); // картинка\r\n    const buttonLike = cardElement.querySelector('.card__like-button');  // кнопка лайка\r\n    \r\n    // Заполнение карточки\r\n    cardImage.src = image;\r\n    cardImage.alt = title;\r\n    cardElement.querySelector('.card__title').textContent = title;\r\n\r\n    // Обработчик кнопки лайка\r\n    buttonLike.addEventListener('click', handleLikeButton);\r\n\r\n    // Обработчик кнопки удаления карточки\r\n    cardElement.querySelector('.card__delete-button').addEventListener('click', () => deleteCard(cardElement));\r\n\r\n    // Обработчик клика по изображению\r\n    cardImage.addEventListener('click', () => handleCardClick(image, title));\r\n\r\n    return cardElement;\r\n};\r\n\r\n// Функция обработки кнопки лайка\r\nexport function handleLikeButton(evt) {\r\n    evt.target.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\n// Функция удаления карточки\r\nexport function deleteCard(card) {\r\n    card.remove();\r\n};","// Функция открытия модального окна\r\nexport function openPopup(modal) {\r\n    // Окно открывается\r\n    modal.classList.add('popup_is-opened');\r\n\r\n    // Добавим обработчик закрытия по Esc\r\n    document.addEventListener('keydown', handleEscClose);\r\n}\r\n\r\n// Функция закрытия модального окна\r\nexport function closePopup(popup) {\r\n    popup.classList.remove('popup_is-opened');\r\n    // Удаляем обработчик на Esc\r\n    document.removeEventListener('keydown', handleEscClose);\r\n}\r\n\r\n// Функция для закрытия окна по нажатию Esc\r\nfunction handleEscClose(evt) {\r\n    if (evt.key === 'Escape') {\r\n        const openedPopup = document.querySelector('.popup_is-opened');\r\n        if (openedPopup) {\r\n            closePopup(openedPopup);\r\n        }\r\n    }\r\n}\r\n\r\nexport function handleOverlayClick(evt) {\r\n    if (!evt.target.closest('.popup__content')) {\r\n        closePopup(evt.currentTarget);\r\n    }\r\n}","import '../pages/index.css';\r\nimport { initialCards } from './cards.js';\r\nimport { createCard, handleLikeButton, deleteCard } from './components/card.js';\r\nimport { openPopup, closePopup, handleOverlayClick } from './components/modal.js';\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst placesListElement = document.querySelector('.places__list');\r\n\r\n// Кнопки для вызова модальных окон\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\n// Модальные окна\r\nconst editModal = document.querySelector('.popup_type_edit');\r\nconst addModal = document.querySelector('.popup_type_new-card');\r\nconst imageModal = document.querySelector('.popup_type_image');\r\n\r\n// Все модальные окна\r\nconst popups = document.querySelectorAll('.popup');\r\n\r\n// Переменные окна редактирования\r\nconst editProfileForm = editModal.querySelector('.popup__form'); //форма редактирования\r\nconst nameInput = editProfileForm.querySelector('.popup__input_type_name'); \r\nconst descriptionInput = editProfileForm.querySelector('.popup__input_type_description');\r\n\r\n// Личная информация\r\nconst name = document.querySelector('.profile__title');\r\nconst job = document.querySelector('.profile__description');\r\n\r\n// Переменные окна добавления карточек\r\nconst addCardForm = addModal.querySelector('.popup__form');\r\nconst placeNameInput = addCardForm.querySelector('.popup__input_type_card-name');\r\nconst imageLinkInput = addCardForm.querySelector('.popup__input_type_url');\r\n\r\n\r\n// Функция открытия окна с изображением\r\nfunction openImageModal(image, title) {\r\n    const popupImage = imageModal.querySelector('.popup__image');\r\n    popupImage.src = image;\r\n    popupImage.alt = title;\r\n    imageModal.querySelector('.popup__caption').textContent = title;\r\n    openPopup(imageModal);\r\n}\r\n\r\n// Функция обработки формы редактирования личной информации\r\nfunction handleEditForm(evt) {\r\n    evt.preventDefault();\r\n\r\n    // Подставляем новые значения на страницу\r\n    name.textContent = nameInput.value;\r\n    job.textContent = descriptionInput.value;\r\n\r\n    // Закрываем окно\r\n    closePopup(editModal);\r\n}\r\n\r\n// Функция обработки формы добавления новых карточек\r\nfunction handleFormAddCard(evt) {\r\n    evt.preventDefault();\r\n\r\n    // Создаем новую карточку\r\n    const newCard = createCard(\r\n        cardTemplate,\r\n        imageLinkInput.value, \r\n        placeNameInput.value,\r\n        deleteCard, \r\n        handleLikeButton, \r\n        (image, title) => openImageModal(image, title)\r\n    );\r\n\r\n    //Добавляем карточку в начало списка\r\n    placesListElement.prepend(newCard);\r\n\r\n    //Закрываем окно\r\n    closePopup(addModal);\r\n\r\n    //Очистка полей формы\r\n    evt.target.reset();\r\n}\r\n\r\n// Для всех модальных окон добавим плавную анимацию\r\ndocument.querySelectorAll('.popup').forEach((popup) => {popup.classList.add('popup_is-animated');});\r\n\r\n// Вывести карточки на страницу\r\ninitialCards.forEach(item => {\r\n    placesListElement.append(\r\n        createCard(\r\n            cardTemplate, \r\n            item.link, \r\n            item.name,\r\n            deleteCard, \r\n            handleLikeButton, \r\n            (image, title) => openImageModal(image, title)\r\n        )\r\n    );    \r\n});\r\n\r\n//Добавим обработчики для закрытия\r\npopups.forEach((popup) => {\r\n    //По крестику\r\n    const closeButton = popup.querySelector('.popup__close');\r\n    closeButton.addEventListener('click', () => {\r\n        closePopup(popup);\r\n\r\n        // Очищаем форму, если это попап добавления карточки\r\n        if (popup.classList.contains('popup_type_new-card')) {\r\n            addCardForm.reset();\r\n        }\r\n    });\r\n\r\n    //По оверлею\r\n    popup.addEventListener('mousedown', (evt) => {\r\n        handleOverlayClick(evt);\r\n\r\n        // Очищаем форму, если это попап добавления карточки\r\n        if (popup.classList.contains('popup_type_new-card') && !popup.classList.contains('popup_is-opened')) {\r\n            addCardForm.reset();\r\n        }\r\n    });\r\n});\r\n\r\n// Показываем модальное окно для редактирования личной информации\r\neditButton.addEventListener('click', () => {\r\n    nameInput.value = name.textContent;\r\n    descriptionInput.value = job.textContent;\r\n    openPopup(editModal); \r\n});\r\n\r\n// Показываем модальное окно для добавления карточки\r\naddButton.addEventListener('click', () => {\r\n    openPopup(addModal); \r\n});\r\n\r\n// Обработка формы редактирования личной информации\r\neditProfileForm.addEventListener('submit', (evt) => handleEditForm(evt)); \r\n\r\n// Обработка формы добавления карточек\r\naddCardForm.addEventListener('submit', (evt) => handleFormAddCard(evt)); \r\n","export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];"],"names":["createCard","cardTemplate","image","title","deleteCard","handleLikeButton","handleCardClick","cardElement","querySelector","cloneNode","cardImage","buttonLike","src","alt","textContent","addEventListener","evt","target","classList","toggle","card","remove","openPopup","modal","add","document","handleEscClose","closePopup","popup","removeEventListener","key","openedPopup","content","placesListElement","editButton","addButton","editModal","addModal","imageModal","popups","querySelectorAll","editProfileForm","nameInput","descriptionInput","name","job","addCardForm","placeNameInput","imageLinkInput","openImageModal","popupImage","forEach","link","item","append","contains","reset","closest","currentTarget","handleOverlayClick","value","preventDefault","handleEditForm","newCard","prepend","handleFormAddCard"],"sourceRoot":""}